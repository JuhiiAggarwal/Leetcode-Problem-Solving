 Problem 1:   https://leetcode.com/problems/two-sum/

// SOLUTION :-

            class Solution {
                public int[] twoSum(int[] nums, int target) {
                        int n=nums.length-1;
                        
                       for(int i=0;i<=n-1;i++){
                           for(int k=i+1;k<=n;k++){
                               if(nums[i]+nums[k]==target)
                               {
                                   return new int[]{i,k};
                               }
                           }
                       }
                           return new int[]{ };
                }
            }
// solution 2:-
public class Solution {
    public int[] twoSum(int[] numbers, int target) {
        HashMap<Integer,Integer> indexMap = new HashMap<Integer,Integer>();
        for(int i = 0; i < numbers.length; i++){
            Integer requiredNum = (Integer)(target - numbers[i]);
            if(indexMap.containsKey(requiredNum)){
                int toReturn[] = {indexMap.get(requiredNum), i};
                return toReturn;
            }

            indexMap.put(numbers[i], i);
        }
        return null;
    }
}
